[manifest]
version = "1.0.0"
dump_lua = true
priority = 777


[[patches]]
[patches.pattern]
target = '=[SMODS SixSuits "SixSuits.lua"]'
pattern = '''
return {
	vars = { '' .. (G.GAME and G.GAME.probabilities.normal or 1), card.ability.extra.odds }
}
'''
position = "at"
payload = '''
local probvars = {SMODS.get_probability_vars(card, 1, card.ability.extra.odds)}
return {vars = {probvars[1], probvars[2]}}
'''
match_indent = true
overwrite = true

[[patches]]
[patches.pattern]
target = '=[SMODS SixSuits "SixSuits.lua"]'
pattern = '''
pseudorandom('starruby') < G.GAME.probabilities.normal / card.ability.extra.odds then
'''
position = "at"
payload = '''
SMODS.pseudorandom_probability(card, 'starruby', 1, card.ability.extra.odds) then
'''
match_indent = true
overwrite = true

[[patches]]
[patches.pattern]
target = '=[SMODS SixSuits "SixSuits.lua"]'
pattern = '''
if v:is_suit(moon_suit.key) and not (v.ability.name == 'Glass Card') and pseudorandom('moonstone') < G.GAME.probabilities.normal / card.ability.extra.odds then
'''
position = "at"
payload = '''
if v:is_suit(moon_suit.key) and not (v.ability.name == 'Glass Card') and SMODS.pseudorandom_probability(card, 'moonstone', 1, card.ability.extra.odds) then
'''
match_indent = true
overwrite = true